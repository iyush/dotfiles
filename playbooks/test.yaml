---
- name: Install Ubuntu dependencies
  hosts: localhost
  become: yes
  tasks:
  - apt:
      name:
        - rofi
        - ninja-build
        - build-essential
        - vim-gtk3                      
        - emacs                        
        - fonts-inconsolata           
        - bspwm
        - sxhkd
        - redshift
        - compton
        - ranger
        - gnome-terminal
        - pylint3                    
        - texlive                   
        - latexmk                  
        - syncthing              
        - stow                  
        - lxappearance         
        - nodejs             
        - fonts-font-awesome
        - pandoc           
        - texlive-latex-extra
        - fonts-material-design-icons-iconfont
        - brightnessctl
        - pavucontrol
        - playerctl
        - xsecurelock
      state: latest
      update_cache: true

- name: Install Polybar
  hosts: localhost
  become: yes
  tasks:
  - name: Install Dependencies
    apt:
      name:
        - cmake 
        - build-essential
        - libcairo2-dev 
        - python3-xcbgen
        - xcb-proto 
        - libxcb1-dev
        - libxcb-util0-dev
        - libxcb-randr0-dev
        - libxcb-xrm-dev
        - libxcb-composite0-dev
        - libxcb-ewmh-dev
        - libxcb-icccm4-dev
        - libxcb-image0-dev
        - libuv1-dev
        - libasound2-dev
        - libiw-dev
        - libmpdclient-dev
        - libcurl4-openssl-dev
        - python3-sphinx
      state: latest
      update_cache: true

  - name: Check if polybar is already installed
    stat:
      path: /usr/local/bin/polybar
    register: polybar

  - name: Get source
    git:
      repo: https://github.com/polybar/polybar 
      dest: /tmp/polybar
    when: not polybar.stat.exists

  - name: Build and Install
    command: "{{ item }} chdir=/tmp/polybar"
    become: yes
    with_items:
      - /usr/bin/cmake .
      - /usr/bin/make -j4
      - /usr/bin/make install
    when: not polybar.stat.exists

  - name: Remove source
    file:
      path: /tmp/polybar
      state: absent
    when: not polybar.stat.exists

  - name: Add "{{ lookup('env', 'USER') }}" to the video group (for brightnessctl)
    user:
      name: "{{ lookup('env', 'USER') }}"
      groups: video
      append: yes

- name: Install Neovim
  hosts: localhost
  become: yes
  tasks:
    - name: Check if polybar is already installed
      stat:
        path: /usr/bin/nvim
      register: nvim

    - name: Download the AppImage and move the AppImage
      get_url:
        url: https://github.com/neovim/neovim/releases/latest/download/nvim.appimage
        dest: /usr/bin/nvim
        mode: '777'
      when: not nvim.stat.exists

- name: Install nerdfonts
  hosts: localhost
  tasks:
    - name: Check if nerd fonts already exists
      stat:
        path: "{{lookup('env', 'HOME')}}/.local/share/fonts/NerdFonts"
      register: nerdfonts

    - name: Git clone nerdfonts
      git:
        repo: https://github.com/ryanoasis/nerd-fonts.git
        dest: /tmp/nerdfonts
      when: not nerdfonts.stat.exists

    - name: Install nerdfonts
      command: "{{ item }} chdir=/tmp/nerdfonts"
      with_items:
        - ./install.sh
      when: not nerdfonts.stat.exists

    - name: Remove git source for nerdfonts
      file:
        path: /tmp/nerdfonts
        state: absent
      when: not nerdfonts.stat.exists

- name: Configure xorg files
  hosts: localhost
  become: yes
  tasks:
    - name: Make folder (if it does not exist)
      file:
        path: /etc/X11/xorg.conf.d/
        state: directory

    - name: Copy the xorg files of the touchpad
      copy:
        src: "{{ playbook_dir }}/../xorg-configs/30-touchpad.conf"
        dest: /etc/X11/xorg.conf.d/30-touchpad.conf 

- name: Setup the wallpaper
  hosts: localhost
  become: yes
  tasks:
  - name: Install pywal
    pip:
      name: pywal

  - name: Download wallpaper to the pictures folder
    copy:
      src: "{{playbook_dir}}/../wallpapers"
      dest: "{{ lookup('env', 'HOME') }}/Pictures" 

  - name: Run pywall for the first time
    command: "python3 -m pywal -i {{lookup('env', 'HOME')}}/Pictures/wallpapers/"

- name: Download lua language server
  hosts: localhost
  tasks:
    - name: Check if already installed
      stat:
        path: "{{ lookup('env', 'HOME') }}/.cache/nvim/lspconfig/sumneko_lua/lua-language-server/bin/Linux/lua-language-server"
      register: luaLangServer

    - name: Git clone to a dir
      git:
        repo: https://github.com/sumneko/lua-language-server
        dest: "{{ lookup('env', 'HOME') }}/.cache/nvim/lspconfig/sumneko_lua/lua-language-server"
        recursive: true
      when: not luaLangServer.stat.exists

    - name: Build
      command: "{{ item }} chdir={{ lookup('env', 'HOME') }}/.cache/nvim/lspconfig/sumneko_lua/lua-language-server/"
      with_items:
        - bash -lc "cd 3rd/luamake && ./compile/install.sh"
        - ./3rd/luamake/luamake rebuild


- name: Symlink all the dotfiles
  hosts: localhost
  tasks:
    - name: Run stow
      command: "{{ item }} chdir={{playbook_dir}}/../"
      with_items:
        - "stow -t {{ lookup('env', 'HOME') }} bash" 
        - "stow -t {{ lookup('env', 'HOME') }} bspwm" 
        - "stow -t {{ lookup('env', 'HOME') }} i3" 
        - "stow -t {{ lookup('env', 'HOME') }} vim" 
        - "stow -t {{ lookup('env', 'HOME') }} compton" 
        - "stow -t {{ lookup('env', 'HOME') }} emacs" 
        - "stow -t {{ lookup('env', 'HOME') }} polybar" 
        - "stow -t {{ lookup('env', 'HOME') }} sxhkd" 
        - "stow -t {{ lookup('env', 'HOME') }} zsh" 
        - "stow -t {{ lookup('env', 'HOME') }} xfiles" 
        - "stow -t {{ lookup('env', 'HOME') }} redshift" 
        - "stow -t {{ lookup('env', 'HOME') }} urxvt" 
        - "stow -t {{ lookup('env', 'HOME') }} scripts" 
  ignore_errors: yes
